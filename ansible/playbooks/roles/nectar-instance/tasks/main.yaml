# Create an instance on NeCTAR
- name: Create an instance
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    network: '{{ instance_network }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Wait for connection
  wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: set inventory info
  set_fact:
    inventoryInfo: "{{ inventoryInfo|default([]) + [ {'name': item.openstack.name, 'ip': item.openstack.public_v4, 'group': ('masterNode' if index == 0 else 'slaveNode')} ] }}"
  when: item.openstack is defined
  loop: '{{ os_instance.results }}'
  loop_control:
    index_var: index

- name: Ensure hosts info is in inventory/inventory.ini
  lineinfile:
    path: inventory/inventory.ini
    line: '{{ item.name }} ansible_host={{ item.ip }}'
    state: present
    insertafter: '\[{{ item.group }}\]'
    regexp: '^{{ item.name }}'
  loop: '{{ inventoryInfo }}'

- name: Refresh all hosts in memory
  meta: refresh_inventory

- debug:
    msg: "{{ groups['Nodes'] | map('extract', hostvars, ['ansible_host']) | join(',') }} "