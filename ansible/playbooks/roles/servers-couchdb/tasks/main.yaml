- name: Collect facts of the host
  setup:
    gather_subset:
      - '!any'

- name: Create couchDB working directory
  tags: couchdb
  become: yes
  file:
    path: "{{ couchDB_dir }}"
    recurse: yes
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create couchDB data directory
  tags: couchdb
  become: yes
  file:
    path: "{{ couchDB_data_dir }}"
    recurse: yes
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Copy couchDB vm.args to {{ couchDB_dir }}"
  become: yes
  template:
    src: vm.args.j2
    dest: '{{ couchDB_dir }}/vm.args'
    force: no
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Copy docker-compose.yaml to {{ couchDB_dir }}"
  become: yes
  copy:
    src: Dockerfile
    dest: "{{ couchDB_dir }}/Dockerfile"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create couchDB docker-compose
  tags: couchdb
  become: yes
  template:
    src: docker-compose.yaml.j2
    dest: "{{ couchDB_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Run couchDB docker-compose
  tags: couchdb
  become: yes
  docker_compose:
    project_src: "{{ couchDB_dir }}"
    pull: yes
    remove_orphans: yes
    state: present
    recreate: always
