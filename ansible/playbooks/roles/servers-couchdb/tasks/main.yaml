- name: Collect facts of the host
  tags: 
    - couchdb
  setup:
    gather_subset:
      - '!any'

- name: Set master ip address
  tags: 
    - couchdb
  set_fact: 
    master_ip_address: "{{ groups['masterNode'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"

- name:  Print the ip of master
  tags: 
    - couchdb
  debug: 
    msg: "Master ip: {{master_ip_address}}"

- name: Get the size of cluster
  tags: 
    - couchdb
  set_fact:
    cluster_size: "{{ groups['Nodes'] | length }}"    
    
- name: Print the size of cluster
  tags: 
    - couchdb
  debug:
    msg: "Size of cluster: {{ cluster_size }} "

- name: Create couchDB working directory
  tags: 
    - couchdb
  become: yes
  file:
    path: "{{ couchDB_dir }}"
    recurse: yes
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create couchDB data directory
  tags: 
    - couchdb
  become: yes
  file:
    path: "{{ couchDB_data_dir }}"
    recurse: yes
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Copy couchDB vm.args to {{ couchDB_dir }}"
  tags: 
    - couchdb
  become: yes
  template:
    src: vm.args.j2
    dest: '{{ couchDB_dir }}/vm.args'
    force: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Copy Dockerfile to {{ couchDB_dir }}"
  tags: 
    - couchdb
  become: yes
  copy:
    src: Dockerfile
    dest: "{{ couchDB_dir }}/Dockerfile"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Copy docker-compose.yaml to {{ couchDB_dir }}"
  tags: 
    - couchdb
  become: yes
  template:
    src: docker-compose.yaml.j2
    dest: "{{ couchDB_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Run couchDB docker-compose
  tags: 
    - couchdb
  become: yes
  docker_compose:
    pull: yes
    build: yes
    project_src: "{{ couchDB_dir }}"
    remove_orphans: yes
    state: present
    recreate: always
    restarted: yes

# Pause for few second before access database
- name: Wati for adding process
  tags: 
    - couchdb
  pause:
    seconds: "{{ couchDB_cluster_setting_interval }}"

- name: "Try access couchDB, to get avoid an strange error: Cluster setup unable to sync admin passwords"
  tags: 
    - couchdb
  become: yes
  shell: "curl http://{{ couchDB_user }}:{{ couchDB_password }}@localhost:5984/"

# curl http://admin:password@localhost/_cluster_setup
# Respect response: {"state":"cluster_finished"}
- name: Verify master installation
  tags: 
    - couchdb
  command: "curl http://{{ couchDB_user }}:{{ couchDB_password }}@localhost:5984/_cluster_setup"
  register: verify_master_install_out
  when: ansible_host == master_ip_address

- name: Verify Output
  tags: 
    - couchdb
  debug:
    msg: "{{verify_master_install_out.stdout}}"
  when: ansible_host == master_ip_address

- name: "Copy addToMaster.sh to {{ couchDB_dir }}"
  tags: 
    - couchdb
  become: yes
  template:
    src: addToMaster.sh.j2
    dest: "{{ couchDB_dir }}/addToMaster.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '777'
  when: ansible_host != master_ip_address

- name: Add slave Node to cluster
  tags: 
    - couchdb
  become: yes
  shell: "{{ couchDB_dir }}/addToMaster.sh  >> {{ couchDB_dir }}/log_addToMaster.txt"
  when: ansible_host != master_ip_address

# Pause for mission complete
- name: Wati for adding process
  tags: 
    - couchdb
  pause:
    seconds: "{{ couchDB_cluster_setting_interval }}"

# curl -X POST -H "Content-Type: application/json" http://cccg17:cccg17@172.26.133.180:5984/_cluster_setup -d '{"action": "finish_cluster"}'
- name: "Copy completeClusterSetUp.sh to {{ couchDB_dir }}"
  tags: 
    - couchdb
  become: yes
  template:
    src: completeClusterSetUp.sh.j2
    dest: "{{ couchDB_dir }}/completeClusterSetUp.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '777'
  when: ansible_host == master_ip_address

- name: "Try access couchDB, to get avoid an strange error: Cluster setup unable to sync admin passwords"
  tags: 
    - couchdb
  become: yes
  shell: "curl http://{{ couchDB_user }}:{{ couchDB_password }}@localhost:5984/"

- name: Complete cluster setting!
  tags: 
    - couchdb
  become: yes
  shell: "{{ couchDB_dir }}/completeClusterSetUp.sh  >> {{ couchDB_dir }}/log_completeClusterSetUp.txt"
  when: ansible_host == master_ip_address

# Pause for mission complete
- name: Wati for completing process
  tags: 
    - couchdb
  pause:
    seconds: "{{ couchDB_cluster_setting_interval }}"


# Verify install:
# curl http://cccg17:cccg17@172.26.133.180:5984/_cluster_setup
# Respect response: {"state":"cluster_finished"}
- name: Verify Cluster install
  tags: 
    - couchdb
  command: "curl http://{{ couchDB_user }}:{{ couchDB_password }}@{{ ansible_host }}:5984/_cluster_setup"
  register: verify_cluster_install_out

- name: Verify install output
  tags: 
    - couchdb
  debug:
    msg: "{{verify_cluster_install_out.stdout}}"

# Verify all cluster nodes are connected:
# curl http://cccg17:cccg17@172.26.133.180:5984/_membership
- name: Verify all cluster nodes are connected
  tags: 
    - couchdb
  command: "curl http://{{ couchDB_user }}:{{ couchDB_password }}@{{ ansible_host }}:5984/_membership"
  register: verify_cluster_connect_out

- name: Verify cluster connection output
  tags: 
    - couchdb
  debug:
    msg: "{{verify_cluster_connect_out.stdout}}"

# Init deploy
- name: Set database in couchDB and set initial data
  tags: 
    - couchdb
  become: yes
  shell:
  args:
    cmd: "python3 init_deploy.py -u cccg17 -p cccg17 -s {{ master_ip_address }}"
    chdir: "{{couchDB_init_deploy_dir}}/"
  when: ansible_host == master_ip_address

- name: Test
  tags: 
    - couchdb
  become: yes
  command: "cat {{couchDB_dir}}/log_addToMaster.txt"
  when: ansible_host != master_ip_address
  register: log_output

- name: Test
  tags: 
    - couchdb
  debug:
    msg: "{{log_output.stdout}}"
  when: ansible_host != master_ip_address

- name: Test
  become: yes
  tags: 
    - couchdb
  command: "cat {{couchDB_dir}}/log_completeClusterSetUp.txt"
  when: ansible_host == master_ip_address
  register: log_output

- name: Test
  tags: 
    - couchdb
  debug:
    msg: "{{log_output.stdout}}"
  when: ansible_host == master_ip_address