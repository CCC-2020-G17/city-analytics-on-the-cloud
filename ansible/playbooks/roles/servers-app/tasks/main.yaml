- name: Set all ip addresses
  tags: app
  set_fact: 
    all_ip_addresses: "{{ (groups['Nodes'] | map('extract', hostvars, ['ansible_host']) | join(',')).split(',')}}"
  run_once: yes

- name: Set master ip address
  tags: app
  set_fact: 
    master_ip_address: "{{ groups['masterNode'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"
  run_once: yes

- name: Set other ip addresses
  tags: app
  set_fact: 
    other_ip_addresses: "{{ (groups['Nodes'] | map('extract', hostvars, ['ansible_host']) | join(',')).split(',') | difference([ansible_host]) }}"
  run_once: yes

- name: Get the size of cluster
  tags: app
  set_fact:
    cluster_size: "{{ groups['Nodes'] | length }}"  
  run_once: yes

- name:  "Create {{ app_dir }} directory"
  tags: app
  become: yes
  file:
    path: "{{ app_dir }}"
    recurse: yes
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# Master would be the Nginx Server
- name: Copy Nginx Server dependency to Master
  tags: app
  include: load_balanced_nginx.yaml
  when: ansible_host == master_ip_address

- name: "Copy docker-compose.yaml to {{app_dir}}"
  tags: app
  become: yes
  template:
    force: yes
    src: docker-compose.yaml.j2
    dest: "{{ app_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Copy proxy.envto {{ app_dir }}/"
  tags: app
  become: yes
  template:
    force: yes
    src: proxy.env.j2
    dest: "{{ app_dir }}/proxy.env"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# - name: Run app docker-compose
#   tags: app
#   become: yes
#   docker_compose:
#     project_src: "{{ app_dir }}"
#     pull: yes
#     remove_orphans: yes
#     state: absent
#     recreate: always
#     restarted: yes
#     build: yes

- name: Deploy stack from a compose file
  tags: 
    - app
    - test
  become: yes
  docker_stack:
    state: present
    prune: yes
    name: app
    compose:
      - "{{ app_dir }}/docker-compose.yaml"
  run_once: yes


