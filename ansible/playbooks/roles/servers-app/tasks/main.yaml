- name: Set all ip addresses
  tags: app
  set_fact: 
    all_ip_addresses: "{{ (groups['Nodes'] | map('extract', hostvars, ['ansible_host']) | join(',')).split(',')}}"

- name:  "Create {{ app_dir }} directory"
  tags: app
  become: yes
  file:
    path: "{{ app_dir }}"
    recurse: yes
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# - name: "Create {{nginx_dir}} directory"
#   tags: app
#   become: yes
#   file:
#     path: "{{ nginx_dir }}"
#     recurse: yes
#     state: directory
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"

# - name: "Copy nginx.conf to {{ nginx_dir }}/"
#   tags: app
#   become: yes
#   template:
#     src: nginx.conf.j2
#     dest: "{{ nginx_dir }}/nginx.conf"
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"

# - name: "Copy nginx_Dockerfile to {{ nginx_dir }}/"
#   tags: app
#   become: yes
#   copy:
#     src: nginx_Dockerfile
#     dest: "{{ nginx_dir }}/Dockerfile"
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"

- name: "Copy docker-compose.yaml to {{app_dir}}"
  tags: app
  become: yes
  template:
    force: yes
    src: docker-compose.yaml.j2
    dest: "{{ app_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# - name: Run app docker-compose
#   tags: app
#   become: yes
#   docker_compose:
#     project_src: "{{ app_dir }}"
#     pull: yes
#     remove_orphans: yes
#     state: absent
#     recreate: always
#     restarted: yes
#     build: yes

- name: Deploy stack from a compose file
  tags: 
    - app
    - test
  become: yes
  docker_stack:
    state: present
    prune: yes
    name: app
    compose:
      - "{{ app_dir }}/docker-compose.yaml"
  run_once: yes


